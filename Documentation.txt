Tech Stack
- Frontend 
    - HTML, CSS, Javascript
- Backend 
    - NodeJS, PostgreSQL, node-postgres (pg. for querying database), dotenv

// Installs and Server Run Commands

-- Done on first pull
Initialize NodeJs file using npm (Node Package Manager) ():
- npm init (inside backend folder)
    - This creates the package.json file that allows for node.js configuration and your node.js server to run

-- Done on first pull
Install dotenv for enviornment configuration:
- npm install dotenv (inside backend folder)
    - installs dotenv library/dependecies for reading and modifying the .env config file

-- Done on first pull
- change "type" value in package.json (Backend folder) to "module"
    - Allows server.js file to import dependecies

-- Done on first pull 
- npm install pg
    - Installs node-postgres sql library for querying postgres database in NodeJS 


Non-docker FrontEnd server start:
- python -m http.server 8080

Non-docker BackEnd server start: 
- node server.js 

// Table Schema
Users 
collection
item

CREATE TABLE IF NOT EXISTS users
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 5 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Username" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "Password" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "CreatedDate" timestamp with time zone DEFAULT now(),
    "ChangeDate" time with time zone,
    CONSTRAINT "Users_pkey" PRIMARY KEY ("ID"),
    CONSTRAINT "Unique ID" UNIQUE ("ID")
        INCLUDE("ID"),
    CONSTRAINT usernameunique UNIQUE ("Username")
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS users
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS collection
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 5 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "userID" integer NOT NULL,
    "collectionTitle" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "CreatedDate" timestamp with time zone DEFAULT now(),
    "ChangeDate" time with time zone,
    CONSTRAINT collection_pkey PRIMARY KEY ("ID"),
    CONSTRAINT "Unique Collection ID" UNIQUE ("ID")
        INCLUDE("ID"),
    CONSTRAINT "collection_userID_fkey" FOREIGN KEY ("userID")
        REFERENCES Users ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS collection
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS item
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 5 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "collectionID" integer NOT NULL,
    "ItemName" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "CreatedDate" timestamp with time zone DEFAULT now(),
    "ChangeDate" time with time zone,
    CONSTRAINT "Item_pkey" PRIMARY KEY ("ID"),
    CONSTRAINT "Unique Item ID" UNIQUE ("ID")
        INCLUDE("ID"),
    CONSTRAINT "item_collectionID_fkey" FOREIGN KEY ("collectionID")
        REFERENCES collection ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS item
    OWNER to postgres;


